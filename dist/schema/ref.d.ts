import { DbRefSchema, EntitySchemaMap } from './types';
export declare const refFactory: (uri: string) => (name: string) => ({
    readonly required?: readonly string[] | undefined;
    readonly default?: string | number | boolean | {
        readonly [x: string]: string | number | boolean | any | {
            readonly [x: number]: string | number | boolean | any | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null;
    } | {
        readonly [x: number]: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | any | null;
        } | any | null;
        readonly length: number;
        readonly toString: {};
        readonly toLocaleString: {};
        readonly pop: {};
        readonly push: {};
        readonly concat: {};
        readonly join: {};
        readonly reverse: {};
        readonly shift: {};
        readonly slice: {};
        readonly sort: {};
        readonly splice: {};
        readonly unshift: {};
        readonly indexOf: {};
        readonly lastIndexOf: {};
        readonly every: {};
        readonly some: {};
        readonly forEach: {};
        readonly map: {};
        readonly filter: {};
        readonly reduce: {};
        readonly reduceRight: {};
        readonly find: {};
        readonly findIndex: {};
        readonly fill: {};
        readonly copyWithin: {};
        readonly entries: {};
        readonly keys: {};
        readonly values: {};
        readonly includes: {};
    } | null | undefined;
    readonly title?: string | undefined;
    readonly pattern?: string | undefined;
    readonly $id?: string | undefined;
    readonly $ref?: string | undefined;
    readonly $schema?: string | undefined;
    readonly multipleOf?: number | undefined;
    readonly maximum?: number | undefined;
    readonly exclusiveMaximum?: number | undefined;
    readonly minimum?: number | undefined;
    readonly exclusiveMinimum?: number | undefined;
    readonly maxLength?: number | undefined;
    readonly minLength?: number | undefined;
    readonly items?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly additionalItems?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly maxItems?: number | undefined;
    readonly minItems?: number | undefined;
    readonly uniqueItems?: boolean | undefined;
    readonly contains?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly maxProperties?: number | undefined;
    readonly minProperties?: number | undefined;
    readonly properties?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: any | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly patternProperties?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: any | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly additionalProperties?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly dependencies?: {
        readonly [x: string]: boolean | readonly string[] | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: any | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly propertyNames?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
    readonly allOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly anyOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly oneOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly definitions?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: any | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly description?: string | undefined;
    readonly examples?: readonly (string | number | boolean | {
        readonly [x: string]: string | number | boolean | any | {
            readonly [x: number]: string | number | boolean | any | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null;
    } | {
        readonly [x: number]: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | any | null;
        } | any | null;
        readonly length: number;
        readonly toString: {};
        readonly toLocaleString: {};
        readonly pop: {};
        readonly push: {};
        readonly concat: {};
        readonly join: {};
        readonly reverse: {};
        readonly shift: {};
        readonly slice: {};
        readonly sort: {};
        readonly splice: {};
        readonly unshift: {};
        readonly indexOf: {};
        readonly lastIndexOf: {};
        readonly every: {};
        readonly some: {};
        readonly forEach: {};
        readonly map: {};
        readonly filter: {};
        readonly reduce: {};
        readonly reduceRight: {};
        readonly find: {};
        readonly findIndex: {};
        readonly fill: {};
        readonly copyWithin: {};
        readonly entries: {};
        readonly keys: {};
        readonly values: {};
        readonly includes: {};
    } | null)[] | undefined;
    readonly format?: string | undefined;
    readonly const?: unknown;
    readonly enum?: unknown;
    readonly not?: unknown;
} & import("./types").IdSchemaBase & {
    readonly $id: string;
    readonly title: string;
    readonly type: "object";
    readonly properties: {
        readonly _id: {
            readonly title: "ID";
            readonly type: "string";
        };
        readonly _collection: {
            readonly title: "Collection";
            readonly type: "string";
            readonly enum: readonly [string];
        };
    };
    readonly required: readonly ["_id", "_collection"];
}) | ({
    readonly required?: readonly string[] | undefined;
    readonly default?: string | number | boolean | {
        readonly [x: string]: string | number | boolean | any | {
            readonly [x: number]: string | number | boolean | any | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null;
    } | {
        readonly [x: number]: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | any | null;
        } | any | null;
        readonly length: number;
        readonly toString: {};
        readonly toLocaleString: {};
        readonly pop: {};
        readonly push: {};
        readonly concat: {};
        readonly join: {};
        readonly reverse: {};
        readonly shift: {};
        readonly slice: {};
        readonly sort: {};
        readonly splice: {};
        readonly unshift: {};
        readonly indexOf: {};
        readonly lastIndexOf: {};
        readonly every: {};
        readonly some: {};
        readonly forEach: {};
        readonly map: {};
        readonly filter: {};
        readonly reduce: {};
        readonly reduceRight: {};
        readonly find: {};
        readonly findIndex: {};
        readonly fill: {};
        readonly copyWithin: {};
        readonly entries: {};
        readonly keys: {};
        readonly values: {};
        readonly includes: {};
    } | null | undefined;
    readonly title?: string | undefined;
    readonly pattern?: string | undefined;
    readonly $id?: string | undefined;
    readonly $ref?: string | undefined;
    readonly $schema?: string | undefined;
    readonly multipleOf?: number | undefined;
    readonly maximum?: number | undefined;
    readonly exclusiveMaximum?: number | undefined;
    readonly minimum?: number | undefined;
    readonly exclusiveMinimum?: number | undefined;
    readonly maxLength?: number | undefined;
    readonly minLength?: number | undefined;
    readonly items?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly additionalItems?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly maxItems?: number | undefined;
    readonly minItems?: number | undefined;
    readonly uniqueItems?: boolean | undefined;
    readonly contains?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly maxProperties?: number | undefined;
    readonly minProperties?: number | undefined;
    readonly properties?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: any | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly patternProperties?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: any | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly additionalProperties?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly dependencies?: {
        readonly [x: string]: boolean | readonly string[] | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: any | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly propertyNames?: boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    } | undefined;
    readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
    readonly allOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly anyOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly oneOf?: readonly (boolean | {
        readonly $id?: string | undefined;
        readonly $ref?: string | undefined;
        readonly $schema?: string | undefined;
        readonly multipleOf?: number | undefined;
        readonly maximum?: number | undefined;
        readonly exclusiveMaximum?: number | undefined;
        readonly minimum?: number | undefined;
        readonly exclusiveMinimum?: number | undefined;
        readonly maxLength?: number | undefined;
        readonly minLength?: number | undefined;
        readonly pattern?: string | undefined;
        readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
        readonly additionalItems?: boolean | any | undefined;
        readonly maxItems?: number | undefined;
        readonly minItems?: number | undefined;
        readonly uniqueItems?: boolean | undefined;
        readonly contains?: boolean | any | undefined;
        readonly maxProperties?: number | undefined;
        readonly minProperties?: number | undefined;
        readonly required?: readonly string[] | undefined;
        readonly properties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly patternProperties?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly additionalProperties?: boolean | any | undefined;
        readonly dependencies?: {
            readonly [x: string]: boolean | readonly string[] | any;
        } | undefined;
        readonly propertyNames?: boolean | any | undefined;
        readonly enum?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly const?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
        readonly allOf?: readonly (boolean | any)[] | undefined;
        readonly anyOf?: readonly (boolean | any)[] | undefined;
        readonly oneOf?: readonly (boolean | any)[] | undefined;
        readonly not?: boolean | any | undefined;
        readonly definitions?: {
            readonly [x: string]: boolean | any;
        } | undefined;
        readonly title?: string | undefined;
        readonly description?: string | undefined;
        readonly default?: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null | undefined;
        readonly examples?: readonly (string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | {
                readonly [x: number]: string | number | boolean | any | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null;
        } | {
            readonly [x: number]: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | any | null;
            } | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null)[] | undefined;
        readonly format?: string | undefined;
    })[] | undefined;
    readonly definitions?: {
        readonly [x: string]: boolean | {
            readonly $id?: string | undefined;
            readonly $ref?: string | undefined;
            readonly $schema?: string | undefined;
            readonly multipleOf?: number | undefined;
            readonly maximum?: number | undefined;
            readonly exclusiveMaximum?: number | undefined;
            readonly minimum?: number | undefined;
            readonly exclusiveMinimum?: number | undefined;
            readonly maxLength?: number | undefined;
            readonly minLength?: number | undefined;
            readonly pattern?: string | undefined;
            readonly items?: boolean | any | readonly (boolean | any)[] | undefined;
            readonly additionalItems?: boolean | any | undefined;
            readonly maxItems?: number | undefined;
            readonly minItems?: number | undefined;
            readonly uniqueItems?: boolean | undefined;
            readonly contains?: boolean | any | undefined;
            readonly maxProperties?: number | undefined;
            readonly minProperties?: number | undefined;
            readonly required?: readonly string[] | undefined;
            readonly properties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly patternProperties?: {
                readonly [x: string]: boolean | any;
            } | undefined;
            readonly additionalProperties?: boolean | any | undefined;
            readonly dependencies?: {
                readonly [x: string]: boolean | readonly string[] | any;
            } | undefined;
            readonly propertyNames?: boolean | any | undefined;
            readonly enum?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly const?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly type?: import("json-schema").JSONSchema6TypeName | readonly import("json-schema").JSONSchema6TypeName[] | undefined;
            readonly allOf?: readonly (boolean | any)[] | undefined;
            readonly anyOf?: readonly (boolean | any)[] | undefined;
            readonly oneOf?: readonly (boolean | any)[] | undefined;
            readonly not?: boolean | any | undefined;
            readonly definitions?: any | undefined;
            readonly title?: string | undefined;
            readonly description?: string | undefined;
            readonly default?: string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null | undefined;
            readonly examples?: readonly (string | number | boolean | {
                readonly [x: string]: string | number | boolean | any | {
                    readonly [x: number]: string | number | boolean | any | any | null;
                    readonly length: number;
                    readonly toString: {};
                    readonly toLocaleString: {};
                    readonly pop: {};
                    readonly push: {};
                    readonly concat: {};
                    readonly join: {};
                    readonly reverse: {};
                    readonly shift: {};
                    readonly slice: {};
                    readonly sort: {};
                    readonly splice: {};
                    readonly unshift: {};
                    readonly indexOf: {};
                    readonly lastIndexOf: {};
                    readonly every: {};
                    readonly some: {};
                    readonly forEach: {};
                    readonly map: {};
                    readonly filter: {};
                    readonly reduce: {};
                    readonly reduceRight: {};
                    readonly find: {};
                    readonly findIndex: {};
                    readonly fill: {};
                    readonly copyWithin: {};
                    readonly entries: {};
                    readonly keys: {};
                    readonly values: {};
                    readonly includes: {};
                } | null;
            } | {
                readonly [x: number]: string | number | boolean | {
                    readonly [x: string]: string | number | boolean | any | any | null;
                } | any | null;
                readonly length: number;
                readonly toString: {};
                readonly toLocaleString: {};
                readonly pop: {};
                readonly push: {};
                readonly concat: {};
                readonly join: {};
                readonly reverse: {};
                readonly shift: {};
                readonly slice: {};
                readonly sort: {};
                readonly splice: {};
                readonly unshift: {};
                readonly indexOf: {};
                readonly lastIndexOf: {};
                readonly every: {};
                readonly some: {};
                readonly forEach: {};
                readonly map: {};
                readonly filter: {};
                readonly reduce: {};
                readonly reduceRight: {};
                readonly find: {};
                readonly findIndex: {};
                readonly fill: {};
                readonly copyWithin: {};
                readonly entries: {};
                readonly keys: {};
                readonly values: {};
                readonly includes: {};
            } | null)[] | undefined;
            readonly format?: string | undefined;
        };
    } | undefined;
    readonly description?: string | undefined;
    readonly examples?: readonly (string | number | boolean | {
        readonly [x: string]: string | number | boolean | any | {
            readonly [x: number]: string | number | boolean | any | any | null;
            readonly length: number;
            readonly toString: {};
            readonly toLocaleString: {};
            readonly pop: {};
            readonly push: {};
            readonly concat: {};
            readonly join: {};
            readonly reverse: {};
            readonly shift: {};
            readonly slice: {};
            readonly sort: {};
            readonly splice: {};
            readonly unshift: {};
            readonly indexOf: {};
            readonly lastIndexOf: {};
            readonly every: {};
            readonly some: {};
            readonly forEach: {};
            readonly map: {};
            readonly filter: {};
            readonly reduce: {};
            readonly reduceRight: {};
            readonly find: {};
            readonly findIndex: {};
            readonly fill: {};
            readonly copyWithin: {};
            readonly entries: {};
            readonly keys: {};
            readonly values: {};
            readonly includes: {};
        } | null;
    } | {
        readonly [x: number]: string | number | boolean | {
            readonly [x: string]: string | number | boolean | any | any | null;
        } | any | null;
        readonly length: number;
        readonly toString: {};
        readonly toLocaleString: {};
        readonly pop: {};
        readonly push: {};
        readonly concat: {};
        readonly join: {};
        readonly reverse: {};
        readonly shift: {};
        readonly slice: {};
        readonly sort: {};
        readonly splice: {};
        readonly unshift: {};
        readonly indexOf: {};
        readonly lastIndexOf: {};
        readonly every: {};
        readonly some: {};
        readonly forEach: {};
        readonly map: {};
        readonly filter: {};
        readonly reduce: {};
        readonly reduceRight: {};
        readonly find: {};
        readonly findIndex: {};
        readonly fill: {};
        readonly copyWithin: {};
        readonly entries: {};
        readonly keys: {};
        readonly values: {};
        readonly includes: {};
    } | null)[] | undefined;
    readonly format?: string | undefined;
    readonly const?: unknown;
    readonly enum?: unknown;
    readonly not?: unknown;
} & {
    readonly $id: string;
    readonly _esRoles?: {
        readonly update: readonly import("..").Role[];
        readonly read: readonly import("..").Role[];
        readonly create: readonly import("..").Role[];
        readonly delete: readonly import("..").Role[];
    } | undefined;
} & {
    readonly $id: string;
    readonly title: string;
    readonly type: "object";
    readonly properties: {
        readonly _id: {
            readonly title: "ID";
            readonly type: "string";
        };
        readonly _collection: {
            readonly title: "Collection";
            readonly type: "string";
            readonly enum: readonly [string];
        };
    };
    readonly required: readonly ["_id", "_collection"];
});
export declare const isDbRefSchema: (schema: any) => schema is DbRefSchema;
export declare const createRefSchemaMap: <TEntityMap>(entitySchemas: import("@mojule/util").KeyValueMap<TEntityMap, import("./types").IdSchema>, createRef: (name: string) => DbRefSchema) => Record<string, DbRefSchema>;
